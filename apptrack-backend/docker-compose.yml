version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      - db
      - redis
      - minio
    restart: unless-stopped

  celery_worker:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - redis
      - db
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - redis
      - db
    restart: unless-stopped

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-apptrack}
      POSTGRES_USER: ${POSTGRES_USER:-apptrack}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apptrack}
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-minio}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-minio123}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 ${AWS_ACCESS_KEY_ID:-minio} ${AWS_SECRET_ACCESS_KEY:-minio123};
      /usr/bin/mc mb -p myminio/${AWS_STORAGE_BUCKET_NAME:-apptrack};
      /usr/bin/mc policy set public myminio/${AWS_STORAGE_BUCKET_NAME:-apptrack};
      exit 0;
      "
    restart: on-failure

volumes:
  postgres_data:
  redis_data:
  minio_data:
