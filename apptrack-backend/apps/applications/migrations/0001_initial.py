# Generated by Django 4.2.25 on 2025-10-27 10:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("job", "Job"), ("scholarship", "Scholarship")],
                        max_length=20,
                        verbose_name="kind",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "organization",
                    models.CharField(max_length=255, verbose_name="organization"),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="location"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="country"
                    ),
                ),
                ("source_url", models.URLField(blank=True, verbose_name="source URL")),
                (
                    "applied_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="applied date"
                    ),
                ),
                (
                    "deadline",
                    models.DateField(blank=True, null=True, verbose_name="deadline"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("applied", "Applied"),
                            ("interview", "Interview"),
                            ("offer", "Offer Received"),
                            ("rejected", "Rejected"),
                            ("withdrawn", "Withdrawn"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="priority",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="tags"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "application",
                "verbose_name_plural": "applications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="StatusHistory",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "from_status",
                    models.CharField(max_length=20, verbose_name="from status"),
                ),
                (
                    "to_status",
                    models.CharField(max_length=20, verbose_name="to status"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="status_changes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="changed by",
                    ),
                ),
            ],
            options={
                "verbose_name": "status history",
                "verbose_name_plural": "status histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="attachments/%Y/%m/%d/", verbose_name="file"
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                (
                    "file_type",
                    models.CharField(max_length=100, verbose_name="file type"),
                ),
                (
                    "file_size",
                    models.BigIntegerField(
                        help_text="File size in bytes", verbose_name="file size"
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("cv", "CV/Resume"),
                            ("cover_letter", "Cover Letter"),
                            ("transcript", "Transcript"),
                            ("certificate", "Certificate"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                        verbose_name="document type",
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_attachments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "attachment",
                "verbose_name_plural": "attachments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Reminder",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("remind_at", models.DateTimeField(verbose_name="remind at")),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("whatsapp", "WhatsApp"),
                            ("sms", "SMS"),
                        ],
                        default="email",
                        max_length=20,
                        verbose_name="channel",
                    ),
                ),
                ("message", models.TextField(blank=True, verbose_name="message")),
                ("is_sent", models.BooleanField(default=False, verbose_name="is sent")),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="sent at"),
                ),
                (
                    "task_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="celery task ID"
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reminders",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
            ],
            options={
                "verbose_name": "reminder",
                "verbose_name_plural": "reminders",
                "ordering": ["remind_at"],
                "indexes": [
                    models.Index(
                        fields=["application", "is_sent", "remind_at"],
                        name="application_applica_ab098a_idx",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["owner", "status"], name="application_owner_i_85b28d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["owner", "deadline"], name="application_owner_i_6269f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="application",
            index=models.Index(
                fields=["owner", "kind"], name="application_owner_i_6e1a69_idx"
            ),
        ),
    ]
